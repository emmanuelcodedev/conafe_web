# Generated by Django 4.2.4 on 2025-01-21 07:52

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('modulo_dot', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApoyoGestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_servicio_educativo', models.CharField(max_length=255)),
                ('numero_ec_asignado', models.IntegerField()),
                ('meses_servicio', models.IntegerField()),
                ('monto_apoyo_mensual', models.DecimalField(decimal_places=2, max_digits=10)),
                ('presupuesto_total_periodo', models.DecimalField(decimal_places=2, max_digits=15)),
                ('usuario', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='modulo_dot.usuario')),
            ],
            options={
                'db_table': 'apoyo_gestion',
            },
        ),
        migrations.CreateModel(
            name='Comunidad',
            fields=[
                ('cv_comunidad', models.CharField(max_length=20, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Solo se permiten letras y números.', regex='^[A-Za-z0-9]+$')], verbose_name='Clave única de la comunidad')),
                ('nombre_comunidad', models.CharField(max_length=100, verbose_name='Nombre completo de la comunidad')),
                ('contexto_comunidad', models.CharField(blank=True, choices=[('Sin asignar', 'Sin asignar'), ('Indígena', 'Indígena'), ('Mestizo', 'Mestizo'), ('Migrante', 'Migrante'), ('Circense', 'Circense'), ('Grupos Vulnerables', 'Grupos Vulnerables'), ('Excluidos del Sistema Regular', 'Excluidos del Sistema Regular')], default='Sin asignar', max_length=255, null=True)),
                ('tipo_servicio', models.TextField(blank=True, null=True, verbose_name='Tipo de servicio educativo que se ofrece')),
                ('estatus', models.CharField(blank=True, choices=[('Activo', 'Activo'), ('Inactivo', 'Inactivo')], max_length=8, null=True, verbose_name='Estado actual de la comunidad')),
                ('localizacion', models.FileField(blank=True, null=True, upload_to='comunidades/', verbose_name='Archivo asociado a la comunidad')),
            ],
            options={
                'db_table': 'comunidad',
            },
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('cv_estado', models.CharField(max_length=5, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Solo se permiten letras y números.', regex='^[A-Za-z0-9]+$')], verbose_name='Clave única del estado')),
                ('nombre_estado', models.CharField(max_length=100, verbose_name='Nombre completo del estado')),
            ],
            options={
                'db_table': 'estado',
            },
        ),
        migrations.CreateModel(
            name='ServicioEducativo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clave_estado', models.CharField(blank=True, max_length=255, null=True)),
                ('nombre_estado', models.CharField(default='Estado', max_length=255)),
                ('clave_region', models.CharField(blank=True, max_length=255, null=True)),
                ('nombre_region', models.CharField(default='Región', max_length=255)),
                ('clave_microregion', models.CharField(default='Región', max_length=255)),
                ('nombre_microregion', models.CharField(max_length=255)),
                ('clave_comunidad', models.CharField(max_length=255)),
                ('nombre_comunidad', models.CharField(default='Nombre genérico', max_length=255)),
                ('clave_centro_trabajo', models.CharField(blank=True, max_length=100, null=True)),
                ('nombre_escuela', models.CharField(blank=True, max_length=255, null=True)),
                ('tipo_sede', models.CharField(blank=True, max_length=255, null=True)),
                ('tipo_servicio', models.CharField(blank=True, choices=[('preescolar', 'Preescolar'), ('primaria', 'Primaria'), ('secundaria', 'Secundaria')], max_length=255, null=True)),
                ('nivel_escolar', models.CharField(blank=True, choices=[('primaria I', 'Primaria I'), ('primaria II', 'Primaria II'), ('primaria III', 'Primaria III'), ('secundaria', 'Secundaria'), ('inicial', 'Inicial')], max_length=255, null=True)),
                ('periodo_servicio', models.CharField(blank=True, choices=[('sin asignar', 'sin asignar'), ('2024-2025', '2024-2025'), ('2025-2026', '2025-2026')], default='sin asignar', max_length=255, null=True)),
                ('rol_vacante', models.CharField(blank=True, choices=[('EC', 'Educador Comunitario'), ('ECA', 'Educador Comunitario de Acompañamiento Microrregional'), ('ECAR', 'Educador Comunitario de Acompañamiento Regional')], max_length=10, null=True)),
                ('cantidad_educadores_activos', models.IntegerField(default=0)),
                ('cantidad_solicitudes', models.IntegerField(default=0)),
                ('status', models.CharField(blank=True, choices=[('aprobado', 'Aprobado'), ('rechazado', 'Rechazado'), ('pendiente', 'Pendiente')], default='Pendiente', max_length=10, null=True)),
                ('apoyo_gestion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='modulo_apec.apoyogestion')),
                ('comunidad_servicio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='modulo_apec.comunidad')),
            ],
            options={
                'db_table': 'servicio_educativo',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('cv_region', models.CharField(max_length=10, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Solo se permiten letras y números.', regex='^[A-Za-z0-9]+$')], verbose_name='Clave única de la región')),
                ('nombre_region', models.CharField(max_length=100, verbose_name='Nombre completo de la región')),
                ('municipios_region', models.CharField(blank=True, max_length=255, null=True, verbose_name='Municipios que pertenecen a la región')),
                ('estado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='regiones', to='modulo_apec.estado', verbose_name='Estado al que pertenece')),
            ],
            options={
                'db_table': 'region',
            },
        ),
        migrations.CreateModel(
            name='Observacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateField(blank=True, null=True)),
                ('fecha', models.DateField(blank=True, null=True)),
                ('comentario', models.TextField(blank=True, null=True)),
                ('candidatos', models.ManyToManyField(blank=True, related_name='observaciones', to='modulo_dot.usuario')),
                ('servicio_educativo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='modulo_apec.servicioeducativo')),
            ],
            options={
                'db_table': 'observacion',
            },
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('cv_municipio', models.CharField(max_length=10, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Solo se permiten letras y números.', regex='^[A-Za-z0-9]+$')], verbose_name='Clave única del municipio')),
                ('nombre_municipio', models.CharField(max_length=100, verbose_name='Nombre completo del municipio')),
                ('estado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='municipios', to='modulo_apec.estado', verbose_name='Estado al que pertenece')),
            ],
            options={
                'db_table': 'municipio',
            },
        ),
        migrations.CreateModel(
            name='Microrregion',
            fields=[
                ('cv_microrregion', models.CharField(max_length=20, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Solo se permiten letras y números.', regex='^[A-Za-z0-9]+$')], verbose_name='Clave única de la microrregión')),
                ('nombre_microrregion', models.CharField(max_length=100, verbose_name='Nombre completo de la microrregión')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='microrregiones', to='modulo_apec.region', verbose_name='Región a la que pertenece')),
            ],
            options={
                'db_table': 'microrregion',
            },
        ),
        migrations.CreateModel(
            name='DatosComplementarios',
            fields=[
                ('id_SituacionEducativa', models.AutoField(primary_key=True, serialize=False)),
                ('situacionEducativa', models.CharField(blank=True, max_length=100, null=True)),
                ('CCT', models.CharField(blank=True, max_length=45, null=True)),
                ('contexto', models.CharField(blank=True, max_length=80, null=True)),
                ('nivel', models.CharField(blank=True, max_length=45, null=True)),
                ('Microregion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='datos_complementarios', to='modulo_apec.microrregion')),
                ('Region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='datos_complementarios', to='modulo_apec.region')),
                ('id_Usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='datos_complementarios', to='modulo_dot.usuario')),
            ],
            options={
                'verbose_name': 'Dato Complementario',
                'verbose_name_plural': 'Datos Complementarios',
                'db_table': 'datos_complementarios',
            },
        ),
        migrations.AddField(
            model_name='comunidad',
            name='microrregion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comunidades', to='modulo_apec.microrregion', verbose_name='Microrregión a la que pertenece'),
        ),
        migrations.AddField(
            model_name='comunidad',
            name='usuario',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='modulo_dot.usuario'),
        ),
    ]
